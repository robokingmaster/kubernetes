---
apiVersion: v1
kind: Namespace
metadata:
  name: red-app

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-red
  namespace: red-app
spec:
  selector:
    matchLabels:
      app: red
  replicas: 2
  template:
    metadata:
      labels:
        app: red
    spec:
      containers:
      - name: webapp
        image: robokingmaster/examples:colorapp
        ports:
        - containerPort: 8080
        env:
        - name: "APP_COLOR"
          value: "red"

---
apiVersion: v1
kind: Service
metadata:
  name: service-red
  namespace: red-app
spec:
  selector:
    app: red
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redapp-ingress
  namespace: red-app
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/group.name: frontend
    alb.ingress.kubernetes.io/certificate-arn: <ACM-SSL Certificate ARN>
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
spec:
  ingressClassName: alb
  rules:
    - host: redapp.abc.com
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: service-red
              port:
                number: 80